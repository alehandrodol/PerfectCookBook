"""made base models

Revision ID: 1db3d739dab7
Revises: c5f94b9737b6
Create Date: 2023-10-07 15:11:32.284898

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1db3d739dab7'
down_revision: Union[str, None] = 'c5f94b9737b6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__t_tags')),
    sa.UniqueConstraint('id', name=op.f('uq__t_tags__id'))
    )
    op.create_table('t_dishes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['t_users.uuid'], name=op.f('fk__t_dishes__user_id__t_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__t_dishes')),
    sa.UniqueConstraint('id', name=op.f('uq__t_dishes__id'))
    )
    op.create_table('t_dish_tag',
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dish_id'], ['t_dishes.id'], name=op.f('fk__t_dish_tag__dish_id__t_dishes')),
    sa.ForeignKeyConstraint(['tag_id'], ['t_tags.id'], name=op.f('fk__t_dish_tag__tag_id__t_tags'))
    )
    op.create_table('t_recipes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('cooking_flow', sa.String(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('dt', sa.DateTime(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('cooked_times', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['t_dishes.id'], name=op.f('fk__t_recipes__dish_id__t_dishes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__t_recipes')),
    sa.UniqueConstraint('id', name=op.f('uq__t_recipes__id'))
    )
    op.create_table('t_ingredients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('quantity', sa.String(length=32), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['t_recipes.id'], name=op.f('fk__t_ingredients__recipe_id__t_recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__t_ingredients')),
    sa.UniqueConstraint('id', name=op.f('uq__t_ingredients__id'))
    )
    op.create_table('t_recipe_tag',
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['t_recipes.id'], name=op.f('fk__t_recipe_tag__recipe_id__t_recipes')),
    sa.ForeignKeyConstraint(['tag_id'], ['t_tags.id'], name=op.f('fk__t_recipe_tag__tag_id__t_tags'))
    )
    op.create_unique_constraint(op.f('uq__t_users__uuid'), 't_users', ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq__t_users__uuid'), 't_users', type_='unique')
    op.drop_table('t_recipe_tag')
    op.drop_table('t_ingredients')
    op.drop_table('t_recipes')
    op.drop_table('t_dish_tag')
    op.drop_table('t_dishes')
    op.drop_table('t_tags')
    # ### end Alembic commands ###
